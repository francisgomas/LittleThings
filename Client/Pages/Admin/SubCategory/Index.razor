@page "/admin/subcategory"
@inject ISubCategoryService SubCategoryService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<PageTitle>@GetPageTitle()</PageTitle>

@if (isAuthenticated)
{
    <Header Value="@GetPageTitle()"/>
    <div class="container-fluid">
        <div class="row px-xl-5">
            <div class="col-lg-12 table-responsive mb-5">
                <table class="table table-bordered text-center mb-0">
                    <thead class="bg-secondary text-dark">
                        <tr>
                            <th>Name</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody class="align-middle">
                        @if (SubCategoryService.SubCategories != null){
                            @foreach (var subc in SubCategoryService.SubCategories)
                           {
                                <tr>
                                    <td class="align-middle">@subc.Name</td>
                                    <td class="align-middle">
                                        <button class="btn btn-sm btn-primary" @onclick="(() => onEditSubCategory(subc.Id))" ><i class="fa fa-pen"></i></button>
                                        <button class="btn btn-sm btn-danger" @onclick="(() => onDeleteSubCategory(subc.Id))"><i class="fa fa-times"></i></button>
                                    </td>
                                </tr>
                           }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row px-xl-5">
            <div class="col-lg-4 col-sm-12">
                <button class="btn btn-primary" @onclick="CreateSubCategory"><i class="fa fa-plus"></i> Add SubCategory</button>
            </div>
        </div>
    </div> 
}

@code{
    bool isAuthenticated = false;
    private string GetPageTitle() => "SubCategory";
    void onEditSubCategory(Guid? id)
    {
        NavigationManager.NavigateTo($"admin/subcategory/edit/{id}");
    }

    private async Task onDeleteSubCategory(Guid id)
    {
        await SubCategoryService.DeleteSubCategory(id);
    }

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsUserAuthenticated();
        await SubCategoryService.GetSubCategories();
    }

    void CreateSubCategory()
    {
        NavigationManager.NavigateTo("admin/subcategory/edit");
    }
}