@page "/admin/permission"
@inject IPermissionService PermissionService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>@GetPageTitle()</PageTitle>

@if (isAuthenticated)
{
    <Header Value="@GetPageTitle()"/>
    <div class="container-fluid">
        <div class="row px-xl-5">
            <div class="col-lg-12 table-responsive mb-5">
                <table class="table table-bordered text-center mb-0">
                    <thead class="bg-secondary text-dark">
                        <tr>
                            <th>Controller Name</th>
                            <th>Action Name</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody class="align-middle">
                        @if (PermissionService.Permissions != null)
                        {
                           @foreach (var permission in PermissionService.Permissions)
                           {
                                <tr>
                                    <td class="align-middle">@permission.ControllerName</td>
                                    <td class="align-middle">@permission.ActionName</td>
                                    <td class="align-middle">
                                        <button class="btn btn-sm btn-primary" @onclick="(() => onEditPermission(permission.Id))" ><i class="fa fa-pen"></i></button>
                                        <button class="btn btn-sm btn-danger" @onclick="(() => onDeletePermission(permission.Id))"><i class="fa fa-times"></i></button>
                                    </td>
                                </tr>
                           }
                        }
                       
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row px-xl-5">
            <div class="col-lg-4 col-sm-12">
                <button class="btn btn-primary" @onclick="CreatePermission"><i class="fa fa-plus"></i> Add Permission</button>
            </div>
        </div>
    </div> 
}

@code{
    bool isAuthenticated = false;
    private string GetPageTitle() => "Role";

    void onEditPermission(int? id)
    {
        NavigationManager.NavigateTo($"admin/permission/edit/{id}");
    }

    private async Task onDeletePermission(int id)
    {
        await PermissionService.DeletePermission(id);
    }

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsUserAuthenticated();
        await PermissionService.GetAdminPermissions();
    }

    void CreatePermission()
    {
        NavigationManager.NavigateTo("admin/permission/edit");
    }
}